[stepper_y]
#step_pin: Y_STEP	# Y
step_pin: E6_STEP	# E6
#   Step GPIO pin (triggered high). This parameter must be provided.
#dir_pin: !Y_DIR	# Y
dir_pin: !E6_DIR	# E6
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !DRIVERS_EN
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
# rotation_distance: 32 # 16T
rotation_distance: 40   # 20T
#   Distance (in mm) that the axis travels with one full rotation of
#   the stepper motor (or final gear if gear_ratio is specified).
#   This parameter must be provided.
microsteps: 16
#   The number of microsteps the stepper motor driver uses. This
#   parameter must be provided.
full_steps_per_rotation: 200
#   The number of full steps for one rotation of the stepper motor.
#   Set this to 200 for a 1.8 degree stepper motor or set to 400 for a
#   0.9 degree motor. The default is 200.
# gear_ratio:
#   The gear ratio if the stepper motor is connected to the axis via a
#   gearbox. For example, one may specify "5:1" if a 5 to 1 gearbox is
#   in use. If the axis has multiple gearboxes one may specify a comma
#   separated list of gear ratios (for example, "57:11, 2:1"). If a
#   gear_ratio is specified then rotation_distance specifies the
#   distance the axis travels for one full rotation of the final gear.
#   The default is to not use a gear ratio.
# step_pulse_duration:
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.
endstop_pin: Y_ENDSTOP
#   Endstop switch detection pin. If this endstop pin is on a
#   different mcu than the stepper motor then it enables "multi-mcu
#   homing". This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
position_min: -49
#   Minimum valid distance (in mm) the user may command the stepper to
#   move to.  The default is 0mm.
position_endstop: -49
#   Location of the endstop (in mm). This parameter must be provided
#   for the X, Y, and Z steppers on cartesian style printers.
position_max: 243
#   Maximum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
homing_speed: 50.0
#   Maximum velocity (in mm/s) of the stepper when homing. The default
#   is 5mm/s.
homing_retract_dist: 3.0
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
homing_retract_speed: 50.0
#   Speed to use on the retract move after homing in case this should
#   be different from the homing speed, which is the default for this
#   parameter
second_homing_speed: 4.0
#   Velocity (in mm/s) of the stepper when performing the second home.
#   The default is homing_speed/2.
homing_positive_dir: false
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.

[tmc2660 stepper_y]
#cs_pin: Y_CS	# Y
cs_pin: E6_CS	# E6
#   The pin corresponding to the TMC2660 chip select line. This pin
#   will be set to low at the start of SPI messages and set to high
#   after the message transfer completes. This parameter must be
#   provided.
# spi_speed: 4000000
#   SPI bus frequency used to communicate with the TMC2660 stepper
#   driver. The default is 4000000.
spi_bus: usart1 # All TMC2660 drivers are connected to USART1
# spi_software_sclk_pin:
# spi_software_mosi_pin:
# spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This only works if microsteps
#   is set to 16. Interpolation does introduce a small systemic
#   positional deviation - see TMC_Drivers.md for details. The default
#   is True.
run_current: 1.4
#   The amount of current (in amps RMS) used by the driver during
#   stepper movement. This parameter must be provided.
sense_resistor: 0.051
#   The resistance (in ohms) of the motor sense resistor. This
#   parameter must be provided.
idle_current_percent: 100
#   The percentage of the run_current the stepper driver will be
#   lowered to when the idle timeout expires (you need to set up the
#   timeout using a [idle_timeout] config section). The current will
#   be raised again once the stepper has to move again. Make sure to
#   set this to a high enough value such that the steppers do not lose
#   their position. There is also small delay until the current is
#   raised again, so take this into account when commanding fast moves
#   while the stepper is idling. The default is 100 (no reduction).
# driver_TBL: 2
# driver_RNDTF: 0
# driver_HDEC: 0
# driver_CHM: 0
# driver_HEND: 3
# driver_HSTRT: 3
# driver_TOFF: 4
# driver_SEIMIN: 0
# driver_SEDN: 0
# driver_SEMAX: 0
# driver_SEUP: 0
# driver_SEMIN: 0
# driver_SFILT: 0
# driver_SGT: 0
# driver_SLPH: 0
# driver_SLPL: 0
# driver_DISS2G: 0
# driver_TS2G: 3
#   Set the given parameter during the configuration of the TMC2660
#   chip. This may be used to set custom driver parameters. The
#   defaults for each parameter are next to the parameter name in the
#   list above. See the TMC2660 datasheet about what each parameter
#   does and what the restrictions on parameter combinations are. Be
#   especially aware of the CHOPCONF register, where setting CHM to
#   either zero or one will lead to layout changes (the first bit of
#   HDEC) is interpreted as the MSB of HSTRT in this case).
