[alignment]
pin: ^!E0_ENDSTOP

[gcode_macro ALIGN_TOOLS]
description: Aligns the tool to the probe
gcode:
    {% set TOOLS = params.TOOLS|default("0,1,2,3") %}
    {% set SAMPLES = params.SAMPLES|default(3)|int %}
    {% set RETRIES = params.RETRIES|default(3)|int %}
    {% set TOLERANCE = params.TOLERANCE|default(0.02)|float %}
    {% set SAVE = params.SAVE|default(1)|abs %}

    # changing this will invalid previous calibration
    {% set PROBE_POINT = "146,101" %}
    {% set remember_position = printer['gcode_macro _SETTINGS'].remember_position %}

    _CG28

    # we must disable the position remembering since it will mess up the alignment
    SET_GCODE_VARIABLE MACRO=_SETTINGS VARIABLE=remember_position VALUE=0
    KTCC_ALIGN_TOOLS TOOLS={ TOOLS } PROBE_POINT={ PROBE_POINT } SAMPLES={ SAMPLES } RETRIES={ RETRIES } TOLERANCE={ TOLERANCE } SAVE={ SAVE }
    SET_GCODE_VARIABLE MACRO=_SETTINGS VARIABLE=remember_position VALUE={ remember_position }

[gcode_macro CLEAN_FOR_ALIGN]
description: Prepares the tool for alignment
gcode:
    SET_TOOL_TEMPERATURE TOOL=0 STDB_TMP=160 ACTV_TMP=160 CHNG_STATE=2
    SET_TOOL_TEMPERATURE TOOL=0 STDB_TMP=160 ACTV_TMP=160 CHNG_STATE=2
    SET_TOOL_TEMPERATURE TOOL=0 STDB_TMP=160 ACTV_TMP=160 CHNG_STATE=2
    SET_TOOL_TEMPERATURE TOOL=0 STDB_TMP=160 ACTV_TMP=160 CHNG_STATE=2

# [gcode_macro PREPARE_MANUAL_Z_OFFSET]
# description: manual adjust z offset
# gcode:
#     {% if params.TOOL is undefined %}
#         { action_raise_error("tool is required") }
#     {% endif %}
#     {% set tool_z_offset = printer['tool ' ~ params.TOOL].offset[2] %}
#     {% set global_z_offset = printer['toollock'].global_offset[2] %}

#     _CG28
#     T{ params.TOOL }
#     PARK_CENTER

# [gcode_macro SET_MANUAL_Z_OFFSET]
# description: Calibrates the z offset
# gcode:
#     # there must be a tool selected
#     {% set current_tool = printer['toollock'].tool_current | int %}
#     {% if current_tool < 0 %}
#         { action_raise_error("no tool selected") }
#     {% endif %}
#     {% set tool_z_offset = printer['tool ' ~ current_tool].offset[2] %}
#     {% set global_z_offset = printer['toollock'].global_offset[2] %}
#     {% set current_z_offset = printer['gcode_move'].homing_origin.z %}
#     {% set z_offset = current_z_offset - global_z_offset %} # new tool offset
#     SET_TOOL_OFFSET TOOL={ current_tool } Z={ z_offset }
