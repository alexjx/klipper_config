[toolgroup 0]
# is_virtual: False
# physical_parent: 
# meltzonelength: 18
# idle_to_standby_time: 30
# idle_to_powerdown_time: 600 
# lazy_home_when_parking: 0
# requires_pickup_for_virtual_load: True
# requires_pickup_for_virtual_unload: True
# unload_virtual_at_dropoff: True
pickup_gcode: 
    _TOOLCHANGE_PICKUP T={ myself.name }
dropoff_gcode:
    _TOOLCHANGE_DROPOFF T={ myself.name } 
# virtual_toolload_gcode:
# virtual_toolunload_gcode: 

[gcode_macro _TOOLCHANGE_PICKUP]
description: Toolchange pickup macro
variable_apply_global_offsets: 1
gcode:
    {% set selected_tool_id = params.T %}
    {% set tool = printer['tool ' ~ selected_tool_id] %}
    {% set extruder = printer[tool.extruder] %}
    {% set offsets = printer.save_variables.variables['tool_' ~ selected_tool_id ~'_offsets'] | default(tool.offset) %}
    {% set global_offsets = printer.toollock.global_offset %}

    # reset offset
    SET_GCODE_OFFSET X=0 Y=0 Z=0

    # raise Z to avoid collision
    G91
    G0 Z+7 F1200
    G90

    # ensure coupler is unlocked
    COUPLER_UNLOCK # FIXME....

    # move to pickup position
    {% if tool.zone[1] | float > 150 %}
        G0 X{ tool.zone[0] } Y170 F30000
    {% endif %}
    G0 X{ tool.zone[0] } Y{ tool.zone[1] } F30000
    G0 Y{ tool.park[1] | float - 20.0 } F9000
    G0 Y{ tool.park[1] } F2400
    M400

    # tool tool
    TOOL_LOCK

    # prime filament
    {% if extruder.can_extrude %}
        SAVE_GCODE_STATE NAME=toolchange_pickup
        M83
        G1 E{ tool.meltzonelength } F{ 40 * 60 }
        RESTORE_GCODE_STATE NAME=toolchange_pickup
    {% endif %}

    # set retraction
    # KTCC_APPLY_TOOL_RETRACTION

    # move out
    G1 Y170 F12000
    M400

    # set offsets
    {% if apply_global_offsets | int != 0 %}
        SET_GCODE_OFFSET X={ offsets[0] + global_offsets[0] } Y={ offsets[1] + global_offsets[1] } Z={ offsets[2] + global_offsets[2] }
    {% else %}
        SET_GCODE_OFFSET X={ offsets[0] } Y={ offsets[1] } Z={ offsets[2] }
    {% endif %}

[gcode_macro _TOOLCHANGE_DROPOFF]
description: Toolchange dropoff macro
gcode:
    {% set selected_tool_id = params.T %}
    {% set tool = printer['tool ' ~ selected_tool_id] %}
    {% set extruder = printer[tool.extruder] %}

    # reset offsets
    SET_GCODE_OFFSET X=0 Y=0 Z=0

    # retract filament
    {% if extruder.can_extrude %}
        SAVE_GCODE_STATE NAME=toolchange_dropoff
        G91
        M83
        G0 Z+1 F1200
        G1 E-{ tool.meltzonelength } F{ 80 * 60 }
        RESTORE_GCODE_STATE NAME=toolchange_dropoff
    {% endif %}

    # raise Z to avoid collision
    G91
    G0 Z+3 F1200
    G90

    # move to park position
    {% if tool.zone[1] | float > 150 %}
        G1 X{ tool.zone[0] } Y150 F30000
    {% endif %}
    G1 X{ tool.zone[0] } Y{ tool.zone[1] } F30000
    G1 Y{ tool.park[1] | float - 20.0 } F9000
    G1 Y{ tool.park[1] } F3000
    M400

    # unlock tool
    TOOL_UNLOCK

    # move out
    G1 Y170 F12000
    M400
