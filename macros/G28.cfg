# for a tool changer with physical swithces, we need to ensure
#  1. found out what axixes we're requested to home
#  2. found out current position (to tell if we are safe)
#  3. move x to a safe position if we know current pos, or increase x if we don't
#  4. move y to a safe position if we know current pos, or increase y if we don't
[gcode_macro G28]
rename_existing: G28.0
gcode:
    {% set home_x = params.X is defined %}
    {% set home_y = params.Y is defined %}
    {% set home_z = params.Z is defined %}
    {% if not home_x and not home_y and not home_z %}
        {% set home_x = True %}
        {% set home_y = True %}
        {% set home_z = True %}
    {% endif %}

    # ensure bed temp is not too high
    {% if printer['heater_bed'].temperature > 80 %}
        { action_raise_error("Bed temperature is too high (>80)") }
    {% endif %}

    # check if we have tool mounted, we could not do that
    M400
    {% if printer['toollock'].tool_current | int >= 0 %}
        { action_raise_error('could not home if there is a tool mounted') }
    {% endif %}
    CHECK_TOOL STATE="unmounted"

    # clear mesh
    BED_MESH_CLEAR

    SAVE_GCODE_STATE NAME=homing_state
    G91

    {% set x_run_current = printer.configfile.settings['tmc2660 stepper_x'].run_current %}
    {% set y_run_current = printer.configfile.settings['tmc2660 stepper_y'].run_current %}
    {% set z_run_current = printer.configfile.settings['tmc2660 stepper_z'].run_current %}

    # energize motors first
    # since we are corexy, if we dont enable both x and y, we will not get accurate position
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1

    # check z pos if we are homed or not
    {% if 'z' in printer.toolhead.homed_axes %}
        # if z is homed, we just lower it by 25mm if we're not high enough
        {% if printer.toolhead.position.z < 25 %}
            G1 Z25 F1200
            M400
        {% endif %}
    {% else %}
        # if z is not homed, we always lower it by 10mm with reduced z stepper current
        RESPOND MSG="force lowering z by 10mm"
        FORCE_MOVE STEPPER=stepper_z DISTANCE=10 VELOCITY=20 ACCEL=100
    {% endif %}

    # SPECIAL: X end stop can only be hit when Y is at the low end
    {% if home_x and not home_y %}
        # we are homing X but not homing Y, we will force it
        {% set home_y = True %}
    {% endif %}

    {% if home_y %}
        # force x, y position if we are not homed
        {% if 'x' not in printer.toolhead.homed_axes %}
            SET_KINEMATIC_POSITION X=-30
        {% endif %}
        {% if 'y' not in printer.toolhead.homed_axes %}
            SET_KINEMATIC_POSITION Y=0
        {% endif %}

        # if we dont have X at a safe position before homing Y, we might damage the X endstop
        {% if 'x' not in printer.toolhead.homed_axes or printer.toolhead.position.x < -25 %}
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ x_run_current * 0.35 }
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ y_run_current * 0.35 }
            G4 P200
            G0 X10 F3000
            M400
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ x_run_current }
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ y_run_current }
            M400
        {% endif %}

        G28.0 Y0
    {% endif %}

    {% if home_x %}
        G28.0 X0
    {% endif %}

    {% if home_z %}
        G90
        G1 X146 Y102 F50000
        G28.0 Z0
        G1 Z10 F1200
    {% endif %}

    RESTORE_GCODE_STATE NAME=homing_state

[gcode_macro _CG28]
gcode:
    {% if "xyz" != printer.toolhead.homed_axes %}
        G28
    {% endif %}
